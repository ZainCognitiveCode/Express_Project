// In this Assignment, I made get,post,delete for the routes/user.js 
// I defined the types of the columns in the models/user.js
// I ran command for the updated migration.


9:30 PM 27/01/2025
I made Validation Folder and Added Validations file for users.js and auth.js in it.

// When I am getting something from my folders then I am using 
const something = require('./something);

// and when I want something from the modules then I do it
const {something} = require('./something);

// Making a gitignore file and adding node_modules

// I made authControllers in the controllers/authControllers.js file
// Then I implemented it in the routes/auth.js

// We can make the code proper by separating the controllers and then implementing it in the routes files.


// I changed the columns in my db so I did this.
npx sequelize-cli migration:generate --name update-table-name

// then I did this.

I have now a file named as 20250128065430-update-table-name in my migrations folder.

I made changes bcz I have changed my columns to id,username,email,password and etc and remove the previous columns.
I did changes with the help of chatgpt

// then I ran this command to apply migration
npx sequelize-cli db:migrate


// New module which I Added

npm install bcrypt
npm install bcryptjs
npm install jsonwebtoken
npm install nodemailer

// I had a mistake like this 
const {User} = require('../models/user');

// and I corrected it like this
const User = require('../models/user');

//
npm install dotenv

// created .env file at the root.
// added JWT_SECRET in it

// adding in app.js -> require('dotenv').config();

// I added .env into .gitignore

// I used jwt for signUp and signIn in auth.js

// I wrote it in the app.js file
console.log("JWT_SECRET:", process.env.JWT_SECRET);

// I did this in .env file
EMAIL_USER=xain.graphics69@gmail.com
EMAIL_PASS=********


// We do not need to use authenticateToken for auth.js bcz these routes are publicly accessible to the user. 
// We will use authenticateToken on users.js routes.

// I have made middleware in the middleware folder as authMiddleware.js
// Then I use it in the app.js as app.use('/users',authenticateToken,usersRouter);

// We can generate jwt_secret like this
node -e "console.log(require('crypto').randomBytes(64).toString('hex'));"

// then I pasted jwt_token generated  into .env file on JWT_SECRET
442b647e6667d34ff2e7f340d1602ffb96cefa0a36987a2f0209c4ca18cf1cd6ffd895cdf16bde47814cb70e3e9d763e0bd21643637d653ad9988ac8dc9a45f9

// And when I signup, it also gives me a token which I will need to verify the user.
// I used the generated token after signup into authorization headers when I want to delete the user,update it, I can do it
now only by providing the token only. I am doing it now with users.js routes. 

// I added again firstName and lastName Columns now in the db again and updated my migration.


// AT 12.42AM 29/01/2025
I added a new route into my users.js route.
// I made changes in the Validations of both auth and users routes.